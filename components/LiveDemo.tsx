"use client"; import { useEffect, useState } from "react"; import { Card } from "@/components/ui/card"; import { Button } from "@/components/ui/button"; import { Tabs, TabsList, TabsTrigger } from "@/components/ui/tabs"; import { formatSlot } from "@/lib/format"; type Tone = "Professional" | "Friendly" | "High-energy" | "Luxury"; const leads = [ { id:"1", from:"maria@buyer.com", subject:"Tour this weekend?", body:"Hi! Is 124 Oak St still available? Could we tour Saturday?", intent:"tour" }, { id:"2", from:"kevin@seller.com", subject:"Thinking of listing 88 Grove", body:"Whats a realistic list price? Timeline is flexible.", intent:"seller" }, { id:"3", from:"tina@buyer.com", subject:"School district questions", body:"Curious about schools near 19 Seaview.", intent:"info" }, { id:"4", from:"olivia@buyer.com", subject:"Open house info for 52 Birch", body:"What time is the open house?", intent:"openhouse" } ]; export default function LiveDemo(){ const [selected, setSelected] = useState(leads[0]); const [tone, setTone] = useState<Tone>("Friendly"); const [slots, setSlots] = useState<string[]>([]); const [reply, setReply] = useState(""); async function fetchSlots(){ const res = await fetch("/api/demo/slots"); const j = await res.json(); setSlots(j?.slots || []); return j?.slots || []; } async function fetchReply(intent:string, t:Tone, s:string[], from:string){ const res = await fetch("/api/demo/reply", { method:"POST", headers:{"Content-Type":"application/json"}, body: JSON.stringify({ intent, tone: t, slots: s, from }) }); const j = await res.json(); setReply(j?.text || ""); } useEffect(() => { (async () => { const s = await fetchSlots(); await fetchReply(selected.intent, tone, s, selected.from); })(); }, [selected.id, tone, selected.intent, selected.from]); return ( <Card className="relative p-4 md:p-6 bg-white/70 dark:bg-white/[0.05] backdrop-blur border border-gold/20 shadow-glow"> <span className="absolute -left-2 top-3 rotate-[-6deg] bg-[#D4AF37] text-indigo px-2 py-0.5 rounded text-xs font-semibold shadow-sm"> LIVE DEMO (mock data) </span> <div className="grid md:grid-cols-2 gap-4"> <Card className="overflow-hidden border border-gold/20"> <div className="px-4 py-3 border-b text-sm font-semibold">Leads</div> <ul> {leads.map(l => ( <li key={l.id} onClick={()=>setSelected(l)} className={`px-4 py-3 border-b cursor-pointer hover:bg-indigo/5 dark:hover:bg-white/10 ${selected.id===l.id?"bg-indigo/5 dark:bg-white/10":""}`}> <div className="text-xs text-slate">{l.from}</div> <div className="text-sm font-medium">{l.subject}</div> <div className="text-xs line-clamp-1 text-slate">{l.body}</div> </li> ))} </ul> </Card> <div className="flex flex-col gap-3"> <Tabs value={tone} onValueChange={(v)=>setTone(v as Tone)}> <TabsList className="grid grid-cols-4"> {(["Professional","Friendly","High-energy","Luxury"] as Tone[]).map(t=>( <TabsTrigger key={t} value={t}>{t}</TabsTrigger> ))} </TabsList> </Tabs> <Card className="p-3 border border-gold/20"> <div className="text-xs text-slate mb-1">Suggested reply</div> <textarea className="w-full h-48 resize-none bg-transparent outline-none text-sm" value={reply} onChange={()=>{}} readOnly /> <div className="flex items-center gap-2 mt-3"> <Button onClick={()=>navigator.clipboard.writeText(reply)}>Copy to Drafts</Button> <Button variant="outline" disabled>Send (requires approval)</Button> </div> <div className="text-[11px] text-slate mt-2">Includes real-time slot suggestions below.</div> </Card> <Card className="p-3 border border-gold/20"> <div className="text-sm font-medium mb-2">Proposed meeting times</div> <div className="flex flex-wrap gap-2"> {slots.slice(0,6).map(s => ( <span key={s} className="px-2 py-1 rounded-full border text-xs">{formatSlot(s)}</span> ))} </div> <div className="mt-3"> <Button variant="secondary" onClick={()=>fetchSlots()}>Regenerate Slots</Button> </div> </Card> </div> </div> </Card> ); }
